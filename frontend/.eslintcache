[{"C:\\Web Project\\Mark 13\\webpageloader\\frontend\\src\\index.js":"1","C:\\Web Project\\Mark 13\\webpageloader\\frontend\\src\\App.js":"2","C:\\Web Project\\Mark 13\\webpageloader\\frontend\\src\\reportWebVitals.js":"3","C:\\Web Project\\Mark 13\\webpageloader\\frontend\\src\\Screen\\editthemes\\index.jsx":"4","C:\\Web Project\\Mark 13\\webpageloader\\frontend\\src\\Screen\\home.jsx":"5","C:\\Web Project\\Mark 13\\webpageloader\\frontend\\src\\Screen\\information.jsx":"6","C:\\Web Project\\Mark 13\\webpageloader\\frontend\\src\\Algorithm\\index.jsx":"7","C:\\Web Project\\Mark 13\\webpageloader\\frontend\\src\\Screen\\editthemes\\loadall.js":"8","C:\\Web Project\\Mark 13\\webpageloader\\frontend\\src\\Style\\index.js":"9","C:\\Web Project\\Mark 13\\webpageloader\\frontend\\src\\component\\Navbar\\navbar.jsx":"10","C:\\Web Project\\Mark 13\\webpageloader\\frontend\\src\\component\\Slider\\carousel.jsx":"11","C:\\Web Project\\Mark 13\\webpageloader\\frontend\\src\\component\\Text\\TextManger.jsx":"12","C:\\Web Project\\Mark 13\\webpageloader\\frontend\\src\\Algorithm\\AllComponent.js":"13"},{"size":435,"mtime":1611158581838,"results":"14","hashOfConfig":"15"},{"size":1504,"mtime":1617898422728,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":4566,"mtime":1617898319062,"results":"18","hashOfConfig":"15"},{"size":5208,"mtime":1617814350005,"results":"19","hashOfConfig":"15"},{"size":2934,"mtime":1617737833165,"results":"20","hashOfConfig":"15"},{"size":1788,"mtime":1617859270250,"results":"21","hashOfConfig":"15"},{"size":9863,"mtime":1617860792991,"results":"22","hashOfConfig":"15"},{"size":1535,"mtime":1614322233825,"results":"23","hashOfConfig":"15"},{"size":1145,"mtime":1615828279027,"results":"24","hashOfConfig":"15"},{"size":3073,"mtime":1617812055395,"results":"25","hashOfConfig":"15"},{"size":1014,"mtime":1615740656951,"results":"26","hashOfConfig":"15"},{"size":140,"mtime":1617898349540,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"xe19bz",{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Web Project\\Mark 13\\webpageloader\\frontend\\src\\index.js",[],["63","64"],"C:\\Web Project\\Mark 13\\webpageloader\\frontend\\src\\App.js",["65","66","67"],"C:\\Web Project\\Mark 13\\webpageloader\\frontend\\src\\reportWebVitals.js",[],"C:\\Web Project\\Mark 13\\webpageloader\\frontend\\src\\Screen\\editthemes\\index.jsx",["68","69","70","71","72"],"import React,{useState,useEffect} from \"react\";\r\nimport LoadAll,{Load} from './loadall';\r\nimport styled from \"styled-components\";\r\nimport {autent} from '../../App';\r\nimport Htag from '../../component/Text/TextManger';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport CarouselSlide from '../../component/Slider/carousel';\r\nimport Navbar from '../../component/Navbar/navbar';\r\nimport jwt from 'jwt-simple';\r\nimport axios from 'axios';\r\n\r\nexport const Container = styled.div`\r\n    height:100vh;\r\n    .header{\r\n        position:relative;\r\n        display:flex;\r\n        justify-content:space-between;\r\n        padding:20px;\r\n        height:10vh;\r\n    }\r\n    .maincontainer{\r\n        display:flex;\r\n        height:90vh;\r\n        border:1px solid black;\r\n    }\r\n    .sidenavbar{\r\n            display:flex;\r\n            flex-direction:column;\r\n            justify-content:space-between;\r\n            border:1px solid blue;\r\n            width:20%;\r\n            overflow:hidden;\r\n            overflow-y:scroll;\r\n            scroll-behavior:smooth;\r\n    }\r\n    .main{\r\n            display:flex;\r\n            flex-direction:column;\r\n            border:1px solid blue;\r\n            width:80%;\r\n            overflow:hidden;\r\n            overflow-y:scroll;\r\n            scroll-behavior:smooth;\r\n    }\r\n    li{\r\n      border:1px solid #1b1c1d;\r\n      background-color:#ebeff0;\r\n      margin:2px;\r\n    }\r\n    li:hover{\r\n\r\n        background-color:#ccd2d3;\r\n    }\r\n`;\r\n\r\nvar demodata=[\r\n{\r\n  id:\"1\",\r\n  name:\"Htag\",\r\n  type:\"TextTag\",\r\n  styles:[{customstyle:'margin:10px;',fontsize:20}],\r\n  data:[{text:\"Hello World\"}]\r\n}\r\n]\r\n\r\nexport default function TheameEdit() {\r\n\r\n  \r\n\r\n  const [Id, setId] = useState(\"\");\r\n  const [userid,setuserid]=useState(\"\")\r\n  const[update,setupdate]=useState(false)\r\n  const [Data,setData]=useState(demodata)\r\n  const [message, setmessage] = useState(\"\")\r\n  const [loadfinish, setloadfinish] = useState(false)\r\n  \r\n  const setid=(id)=>{\r\n    setId(id)\r\n  }\r\n\r\n  useEffect(()=>{\r\n\r\n    setuserid(\r\n      jwt.decode(localStorage.getItem('UserLogin'),\"WEB_X\").id\r\n    )\r\n\r\n  if(!loadfinish)\r\n  {\r\n    \r\n    axios.post('http://localhost:5000/access/dashboardweb',{id:jwt.decode(localStorage.getItem('UserLogin'),\"WEB_X\").id})\r\n    .then((res)=>{\r\n      if(res.data.result)\r\n      {\r\n        if(res.data.re)\r\n        {\r\n          let data=[]\r\n          res.data.re.map((e)=>{\r\n              data.push(JSON.parse(e))\r\n          })\r\n         setData(data)\r\n         setloadfinish(false)\r\n        }\r\n      }})\r\n    }\r\n\r\n    if(!Data.length)\r\n    {\r\n      setData(demodata)\r\n    }\r\n  \r\n  },[])\r\n\r\n\r\n\r\n  function handleupdate(){    \r\n    setupdate(()=>!update)\r\n  }\r\n\r\n  function UpdateWebApp()\r\n  {\r\n    let Datalist=[]\r\n    \r\n    Data.map((d) => {\r\n      Datalist.push(JSON.stringify(d));\r\n    });\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/access/Updateapp\", {\r\n        id: userid,\r\n        datalist: Datalist,\r\n      })\r\n      .then((res) => {\r\n        setmessage(res.data.message);\r\n        setTimeout(() => {\r\n          setmessage(\"\");\r\n        }, 1000);\r\n      });\r\n\r\n  }\r\n\r\n  const e=React.createElement\r\n  const component={\"Htag\":Htag,\"CarouselSlide\":CarouselSlide,\"Navbar\":Navbar}\r\n  \r\n\r\n  return (  \r\n    <Container>\r\n      <div className=\"header\">\r\n\r\n        <div>\r\n          <h3>WebName</h3>\r\n        </div>\r\n        <div>\r\n          <button onClick={()=>window.location.href=\"http://localhost:3000/AllComponent\"}>Add Component</button>\r\n        </div>\r\n        <div>\r\n          <label style={{color:'red'}}>{message}</label>\r\n          <button onClick={()=>{UpdateWebApp()}}>Save</button>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"maincontainer\">\r\n          <div className=\"sidenavbar\">\r\n              <div>\r\n                <Load id={Id} demodata={Data} handleupdate={handleupdate} />\r\n              </div>\r\n              <li onClick={()=>{\r\n                autent.singout()\r\n                window.location.href=\"http://localhost:3000/\"\r\n              }}>Signout</li>\r\n          </div>\r\n          <div className=\"main\">\r\n            {\r\n              Data.map((Data,index)=>\r\n                      <div onClick={()=>{setid(Data.id)}} key={index}>\r\n                         {        \r\n                          e(\r\n                            component[Data.name],\r\n                            { styles: Data.styles, key: index, data: Data.data },\r\n                          )\r\n                        }\r\n                 </div>\r\n             )\r\n            }\r\n          </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Web Project\\Mark 13\\webpageloader\\frontend\\src\\Screen\\home.jsx",["73"],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Form} from '../Style/index';\r\nimport axios from 'axios';\r\nimport jwt from \"jwt-simple\";\r\nimport {autent} from '../App'\r\n\r\nconst Container = styled.div`\r\n  div.text {\r\n    margin: 15px;\r\n    text-align: center;\r\n  }\r\n\r\n  div.logincontainer {\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    .loginheader {\r\n      display: flex;\r\n      justify-content: center;\r\n      width: 40%;\r\n      p {\r\n        margin: 10%;\r\n        margin-bottom: 0px;\r\n        font-size: 30px;\r\n        color: #222121;\r\n      }\r\n    }\r\n  }\r\n  .loginbody {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport default function Home() {\r\n  const [visible, setvisible] = useState(true);\r\n\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    name:\"\",\r\n    password: \"\",\r\n    discription:\"\",\r\n    msg: \"\",\r\n  });\r\n\r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    setValues((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(visible)\r\n    {\r\n      axios.post('http://localhost:5000/access/login',{\r\n        email:values.email,\r\n        password:values.password\r\n      })\r\n      .then((res)=>{\r\n\r\n        if(res.data.result)\r\n        {\r\n          localStorage.clear();\r\n          \r\n          setValues((preState)=>({...preState,msg:res.data.message,email:\"\",password:\"\"}))\r\n\r\n          localStorage.setItem(\r\n            \"UserLogin\",\r\n            jwt.encode(res.data,\"WEB_X\")\r\n          );\r\n          \r\n          autent.authenticate();\r\n            \r\n            if(res.data.createdweb)\r\n            {\r\n              window.location.href=\"http://localhost:3000/Dashboard\"\r\n            }\r\n            else{\r\n              window.location.href=\"http://localhost:3000/Discription\"\r\n            }\r\n          \r\n          \r\n        }\r\n        else{\r\n\r\n          setValues((preState)=>({...preState,msg:res.data.message}))\r\n\r\n        }\r\n\r\n\r\n      })\r\n    }\r\n    else\r\n    {\r\n      axios.post('http://localhost:5000/access/register',{\r\n        email:values.email,\r\n        password:values.password,\r\n        name:values.name,\r\n        discription:values.discription\r\n      })\r\n      .then((res)=>{\r\n\r\n          console.log(res.data)\r\n        if(res.data.result)\r\n        {\r\n          localStorage.clear();\r\n          \r\n          setValues((preState)=>({...preState,msg:res.data.message,email:\"\",password:\"\"}))\r\n\r\n          localStorage.setItem(\r\n            \"UserLogin\",\r\n            jwt.encode(res.data,\"WEB_X\")\r\n          );\r\n          \r\n          autent.authenticate();\r\n\r\n          setTimeout(()=>{\r\n            window.location.href=\"http://localhost:3000/Discription\"\r\n          },500)  \r\n            \r\n        }\r\n        else{\r\n          setValues((preState)=>({...preState,msg:res.data.message}))\r\n\r\n        }\r\n      })\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"text\">\r\n        <h2>Want To Build Your own Website Free of cost with free Hosting?</h2>\r\n        <p>Hury Up! and Sign In!!</p>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"logincontainer\">\r\n          <div className=\"loginheader\">\r\n            <p>{visible ? \"Login\" : \"Register\"}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"loginbody\">\r\n              <Form className=\"loginbodyform\">\r\n            <form\r\n              autoComplete=\"off\"\r\n              className=\"form\"\r\n              onSubmit={(e) => handleSubmit(e)}\r\n            >\r\n              <h4 style={{ color: \"#d60b0b\" }}>{values.msg}</h4>\r\n              \r\n              {!visible?<input\r\n                required\r\n                type=\"name\"\r\n                value={values.name}\r\n                placeholder=\"Name\"\r\n                name=\"name\"\r\n                onChange={(e) => handleChange(e)}\r\n              />:<></>}\r\n\r\n              <input\r\n                required\r\n                type=\"email\"\r\n                value={values.email}\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n              <input\r\n                required\r\n                type=\"password\"\r\n                value={values.password}\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n\r\n            {!visible?<textarea\r\n                required\r\n                type=\"text\"\r\n                min=\"10\"\r\n                value={values.discription}\r\n                placeholder=\"Website discription\"\r\n                name=\"discription\"\r\n                onChange={(e) => handleChange(e)}\r\n              />:<></>}\r\n\r\n\r\n              {/* <p className=\"forgot-password\">Forgot Password?</p> */}\r\n              <div className=\"action-group\">\r\n                <button>LOGIN</button>\r\n                <p>\r\n                  Don't have an account? <span onClick={()=>setvisible(!visible)}>Register</span>\r\n                </p>\r\n              </div>\r\n            </form>\r\n          </Form>\r\n          </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Web Project\\Mark 13\\webpageloader\\frontend\\src\\Screen\\information.jsx",["74"],"import React,{useState,useEffect} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Form } from \"../Style/index\";\r\nimport jwt from 'jwt-simple';\r\nimport axios from \"axios\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 10%;\r\n`;\r\n\r\nexport default function Information() {\r\n\r\n  const [Info, setInfo] = useState({name:\"\"});\r\n  const [status, setstatus] = useState(false)\r\n  const [id,setid]=useState('')\r\n  useEffect(()=>{\r\n    setid(\r\n      jwt.decode(localStorage.getItem('UserLogin'),\"WEB_X\").id\r\n    )\r\n  },[])\r\n\r\n\r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    setInfo((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n\r\n    if(value==\"\" || value.length<3)\r\n    {\r\n      setstatus(false)\r\n      return false\r\n    }\r\n\r\n    axios.get(`http://localhost:5000/access/check/${value}`)\r\n    .then((res)=>{\r\n      if(res.data.result)\r\n      {\r\n        setstatus(true)\r\n        setInfo((preState)=>({...preState,message:res.data.message}))\r\n        setTimeout(()=>{\r\n          setInfo((preState)=>({...preState,message:\"\"}))\r\n        },3000)\r\n      }\r\n      else\r\n      {\r\n        setstatus(false)\r\n        setInfo((preState)=>({...preState,message:res.data.message}))\r\n        setTimeout(()=>{\r\n          setInfo((preState)=>({...preState,message:\"\"}))\r\n        },3000)\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleSubmit=()=>{\r\n\r\n    if(status && Info.name.length >3)\r\n    {\r\n      axios.post('http://localhost:5000/access/registerwebname',{\r\n        name:Info.name,\r\n        id:id\r\n      })\r\n      .then((res)=>{\r\n\r\n        if(res.data.result)\r\n        {\r\n          setInfo((preState)=>({...preState,message:res.data.message}))\r\n          setTimeout((res)=>{\r\n                window.location.href=\"http://localhost:3000/Dashboard\"\r\n          })\r\n        }\r\n\r\n      })\r\n    }\r\n    else\r\n    {\r\n        setInfo((preState)=>({...preState,message:\"Enter Valid Domain!\"}))\r\n        setTimeout(()=>{\r\n          setInfo((preState)=>({...preState,message:\"\"}))\r\n        },2000)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <p>\r\n          Register your domain:- <p style={{color:'blue'}}>http://localhost:3000/{\"{YOUR_DOMAIN_HERE}\"}</p>\r\n        </p>\r\n        <Form>\r\n          <form autoComplete=\"off\" className=\"form\" onSubmit={(e)=>{e.preventDefault()}}>\r\n            <input\r\n              required\r\n              type=\"name\"\r\n              placeholder=\"name\"\r\n              name=\"name\"\r\n              value={Info.name}\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n            <div className=\"action-group\">\r\n              <p style={{color:'red',textAlign:'center'}}>{Info.message}</p>\r\n              <button onClick={()=>{handleSubmit()}}>{status?\"Get Name\":\"Chack Availability\"}</button>\r\n            </div>\r\n          </form>\r\n        </Form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Web Project\\Mark 13\\webpageloader\\frontend\\src\\Algorithm\\index.jsx",["75","76","77"],"import React,{useState,useEffect} from 'react'\r\nimport Htag from '../component/Text/TextManger';\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport CarouselSlide from '../component/Slider/carousel'\r\nimport Navbar from '../component/Navbar/navbar';\r\nimport axios from 'axios';\r\nimport ReactLoading from 'react-loading';\r\n\r\n\r\n\r\n\r\nfunction LoadAll(props) {\r\n\r\n  const [Data,setData]=useState([])\r\n  const [loading, setloading] = useState(true)\r\n    \r\n  const e=React.createElement\r\n  const component={\"Htag\":Htag,\"CarouselSlide\":CarouselSlide,\"Navbar\":Navbar}\r\n  \r\n  useEffect(() => {\r\n\r\n    axios.post('http://localhost:5000/access/DisplayApp',{name:props.match.params.name})\r\n    .then((res)=>{\r\n      if(res.data.result)\r\n      {\r\n\r\n        if(res.data.re)\r\n        {\r\n          let data=[]\r\n          res.data.re.map((e)=>{\r\n              data.push(JSON.parse(e))\r\n          })\r\n         setData(data)\r\n         setloading(false)\r\n        }\r\n        else\r\n        {\r\n        }\r\n      }})\r\n   \r\n    return () => {\r\n    };\r\n  }, [])\r\n\r\n\r\n    return (\r\n      <div>\r\n        {!loading?\r\n              Data.map((Data,index)=>\r\n                      <div key={index}>\r\n                         {      \r\n                          e(\r\n                            component[Data.name],\r\n                            { styles: Data.styles, key: index, data: Data.data },\r\n                          )\r\n                        }\r\n                 </div>\r\n             ):<div style={{display:'flex',flexDirection:'row',justifyContent:'center'}}>\r\n                <ReactLoading type=\"bars\" color=\"#41bfdf\" height={'10%'} width={'10%'}/>\r\n               </div>\r\n            }\r\n            {!Data.length&!loading?<h1>Page Has No Data!</h1>:\"\"}\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default LoadAll;","C:\\Web Project\\Mark 13\\webpageloader\\frontend\\src\\Screen\\editthemes\\loadall.js",["78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93"],"import React, { useState, useEffect } from \"react\";\r\nimport Htag from \"../../component/Text/TextManger\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport CarouselSlide from \"../../component/Slider/carousel\";\r\nimport Navbar from \"../../component/Navbar/navbar\";\r\n\r\n\r\nconst ShowInputFiled = ({ Styles, handleupdate }) => {\r\n\r\n  const [sty, setsty] = useState(Styles != undefined ? Styles[0] : {});\r\n  const [State, setState] = useState(false);\r\n  const [Value, setValue] = useState(\"\");\r\n\r\n\r\n  const hadlechange = (id, res) => {\r\n    \r\n    if(id==\"padding\" || id==\"margin\")\r\n    {\r\n      setsty((prev) => ({ ...prev, [id]:{...sty[id],[res.name]:res.value} }));\r\n      Styles[0] = sty;\r\n    }\r\n    else\r\n    {\r\n      setsty((prev) => ({ ...prev, [id]: res }));\r\n      Styles[0] = sty;\r\n    }\r\n  };\r\n\r\n  const Addfiled = (s, index) => {\r\n    switch (s) {\r\n      case \"color\":\r\n        return (\r\n          <li key={index}>\r\n            Color:&nbsp;\r\n            <input\r\n              type=\"color\"\r\n              value={sty[s]}\r\n              onChange={(e) => {\r\n                hadlechange(\"color\", e.target.value);\r\n              }}\r\n            />\r\n          </li>\r\n        );\r\n      case \"backgroundcolor\":\r\n        return (\r\n          <li key={index}>\r\n            backgroundColor:&nbsp;\r\n            <input\r\n              type=\"color\"\r\n              value={sty[s]}\r\n              onChange={(e) => {\r\n                hadlechange(\"backgroundcolor\", e.target.value);\r\n              }}\r\n            />\r\n          </li>\r\n        );\r\n      case \"fontsize\":\r\n        return (\r\n          <li key={index}>\r\n            fontsize:&nbsp;\r\n            <input\r\n              type=\"number\"\r\n              value={sty[s]}\r\n              onChange={(e) => {\r\n                hadlechange(\"fontsize\", e.target.value);\r\n              }}\r\n            />\r\n          </li>\r\n        );\r\n      case \"textalign\":\r\n        return (\r\n          <li key={index}>\r\n            Alignment:&nbsp;\r\n            <select\r\n              value={sty[s]}\r\n              onChange={(e) => {\r\n                hadlechange(\"textalign\", e.target.value);\r\n              }}\r\n            >\r\n              {[\"center\", \"left\", \"right\"].map((name) => (\r\n                <option value={name} key={name}>\r\n                  {name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </li>\r\n        );\r\n      case \"padding\":\r\n        return (\r\n          <li key={index}>\r\n            padding:&nbsp;\r\n            <br />\r\n            Top:&nbsp;\r\n            <input\r\n              type=\"number\"\r\n              value={sty[s].top}\r\n              onChange={(e) => {\r\n                hadlechange(\"padding\", { name: \"top\", value: e.target.value });\r\n              }}\r\n            />\r\n            <br />\r\n            Right:&nbsp;\r\n            <input\r\n              type=\"number\"\r\n              value={sty[s].right}\r\n              onChange={(e) => {\r\n                hadlechange(\"padding\", {\r\n                  name: \"right\",\r\n                  value: e.target.value,\r\n                });\r\n              }}\r\n            />\r\n            <br />\r\n            Left:&nbsp;\r\n            <input\r\n              type=\"number\"\r\n              value={sty[s].left}\r\n              onChange={(e) => {\r\n                hadlechange(\"padding\", { name: \"left\", value: e.target.value });\r\n              }}\r\n            />\r\n            <br />\r\n            Bottom:&nbsp;\r\n            <input\r\n              type=\"number\"\r\n              value={sty[s].bottom}\r\n              onChange={(e) => {\r\n                hadlechange(\"padding\", {\r\n                  name: \"bottom\",\r\n                  value: e.target.value,\r\n                });\r\n              }}\r\n            />\r\n          </li>\r\n        );\r\n      case \"margin\":\r\n        return (\r\n          <li key={index}>\r\n            Margin:&nbsp;\r\n            <br />\r\n            Top:&nbsp;\r\n            <input\r\n              type=\"number\"\r\n              value={sty[s].top}\r\n              onChange={(e) => {\r\n                hadlechange(\"margin\", { name: \"top\", value: e.target.value });\r\n              }}\r\n            />\r\n            <br />\r\n            Right:&nbsp;\r\n            <input\r\n              type=\"number\"\r\n              value={sty[s].right}\r\n              onChange={(e) => {\r\n                hadlechange(\"margin\", { name: \"right\", value: e.target.value });\r\n              }}\r\n            />\r\n            <br />\r\n            Left:&nbsp;\r\n            <input\r\n              type=\"number\"\r\n              value={sty[s].left}\r\n              onChange={(e) => {\r\n                hadlechange(\"margin\", { name: \"left\", value: e.target.value });\r\n              }}\r\n            />\r\n            <br />\r\n            Bottom:&nbsp;\r\n            <input\r\n              type=\"number\"\r\n              value={sty[s].bottom}\r\n              onChange={(e) => {\r\n                hadlechange(\"margin\", {\r\n                  name: \"bottom\",\r\n                  value: e.target.value,\r\n                });\r\n              }}\r\n            />\r\n          </li>\r\n        );\r\n      case \"width\":\r\n        return (\r\n          <li key={index}>\r\n            width:&nbsp;\r\n            <input\r\n              type=\"number\"\r\n              value={sty[s]}\r\n              onChange={(e) => {\r\n                hadlechange(\"width\", e.target.value);\r\n              }}\r\n            />\r\n          </li>\r\n        );\r\n      case \"height\":\r\n        return (\r\n          <li key={index}>\r\n            height:&nbsp;\r\n            <input\r\n              type=\"number\"\r\n              value={sty[s]}\r\n              onChange={(e) => {\r\n                hadlechange(\"height\", e.target.value);\r\n              }}\r\n            />\r\n          </li>\r\n        );\r\n      // case \"customstyle\":\r\n      //   return (\r\n      //     <li>\r\n      //       Custom-Style &nbsp;\r\n      //       <br />\r\n      //       <textarea\r\n      //         value={sty[s]}\r\n      //         min=\"10\"\r\n      //         onChange={(e) => {\r\n      //           hadlechange(\"customstyle\", e.target.value);\r\n      //         }}\r\n      //       />\r\n      //     </li>\r\n      //   );\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n  \r\n  function submit()\r\n  {\r\n    hadlechange(\"customstyle\",\"\")     \r\n    handleupdate()\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <form>\r\n        {Object.keys(sty).map((data, index) => Addfiled(data, index))}\r\n        <li>\r\n            Custom-Style &nbsp;\r\n            <br />\r\n            <textarea\r\n              value={sty['customstyle']!=undefined?sty['customstyle']:\"\"}\r\n              min=\"10\"\r\n              onChange={(e) => {\r\n                hadlechange(\"customstyle\", e.target.value);\r\n              }}\r\n            />\r\n          </li>\r\n          <button style={{backgroundColor:'#db250d',margin:5,color:'white'}} onClick={()=>submit()}>Save Changes</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const Load = ({ id, demodata, handleupdate }) => {\r\n\r\n  const [Styles, setStyle] = useState({});\r\n  const [Id, setId] = useState(id);\r\n  const[layout,Setlayout]=useState(true)\r\n  const [isstyle, setisstyle] = useState(true)\r\n\r\n  useEffect(() => {\r\n    if (Id != \"\") {\r\n      setStyle(() => {\r\n        let data = demodata.filter((data) => data.id == Id);\r\n        return data[0];\r\n      });\r\n    }\r\n  }, [Id]);\r\n\r\n  const Taglist = () => {\r\n\r\n    function drag(s,e){\r\n      let d=demodata;\r\n      [d[s],d[e]]=[d[e],d[s]];  \r\n\r\n      handleupdate()\r\n    }\r\n\r\n    function deletecomponent(e)\r\n    {\r\n      \r\n      let d=demodata;\r\n        d.splice(e,1) \r\n      handleupdate()\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n      <ul className=\"list-group\">\r\n        {\r\n        layout?\r\n        \r\n        Array.isArray(demodata) && demodata.length ? (\r\n          demodata.map((Data, index) => (\r\n            <div>\r\n            <li\r\n              className=\"list-group-item\"\r\n              onClick={() => {\r\n                setId(Data.id);\r\n                Setlayout(!layout)\r\n              }}\r\n              key={index}\r\n            >\r\n              {Data.type} {Data.name}\r\n            </li>\r\n             {index!=0?<button onClick={()=>{\r\n              drag(index,index-1)          \r\n            }}>up</button>:\"\"}\r\n  \r\n            {demodata.length-1!=index?<button onClick={()=>{\r\n                drag(index,index+1)\r\n            }}>Down</button>:\"\"}\r\n\r\n            <button onClick={()=>{\r\n                deletecomponent(index)\r\n            }}>Delete</button>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <></>\r\n        )\r\n      :\r\n       <> \r\n        <i className=\"fa fa-arrow-left\" style={{color:\"gray\",fontSize:\"20px\"}} onClick={()=>{Setlayout(!layout)}}></i>\r\n        \r\n        <li className=\"btn\" onClick={()=>setisstyle(true)}>Edit Style</li>\r\n        <div style={{display:!isstyle?\"none\":\"\"}}>\r\n          <ShowInputFiled Styles={Styles.styles} handleupdate={handleupdate}/>\r\n        </div>\r\n        <li className=\"btn\" onClick={()=>setisstyle(false)}>Edit Data</li>\r\n        <div style={{display:isstyle?\"none\":\"\"}}>\r\n          <ShowInputFiled Styles={Styles.styles} handleupdate={handleupdate}/>\r\n        </div>\r\n        </>\r\n      }    \r\n      </ul>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <Taglist />\r\n    </>\r\n  );\r\n};\r\n\r\nfunction LoadAll({ setid, demodata }) {\r\n  const e = React.createElement;\r\n  const component = Htag;\r\n\r\n  return (\r\n    <>\r\n      {Array.isArray(demodata) && demodata.length ? (\r\n        demodata.map((Data, index) => (\r\n          <div\r\n            onClick={() => {\r\n              setid(Data.id);\r\n            }}\r\n            key={index}\r\n          >\r\n            {\r\n              (console.log(demodata),\r\n              e(component[Data.name], {\r\n                styles: Data.styles,\r\n                key: index,\r\n                data: Data.data,\r\n              }))\r\n            }\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoadAll;\r\n","C:\\Web Project\\Mark 13\\webpageloader\\frontend\\src\\Style\\index.js",[],"C:\\Web Project\\Mark 13\\webpageloader\\frontend\\src\\component\\Navbar\\navbar.jsx",["94","95","96","97"],"import React,{useState} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\r\n        \r\n\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Navbar({styles,data}) {\r\n    \r\n    const Style=styles==undefined?{width:100,height:130,color:\"white\",backgroundcolor:\"black\"}:styles[0];\r\n    const Data=data == undefined\r\n          ? [\r\n              {\r\n                img:\"https://images.unsplash.com/photo-1614788679832-7879205af178?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1955&q=80\",\r\n                Text:\"Hello World\",\r\n                center:true\r\n              },\r\n            ][0]\r\n          : data[0]\r\n    \r\n\r\n  return (\r\n    <Container>\r\n    <nav className=\"navbar\" style={{backgroundColor:Style.backgroundcolor}}>\r\n    <div className={`container-fluid ${Data.center?'d-flex justify-content-center':''}`} >\r\n      <a className=\"navbar-brand\" href=\"#\" style={{color:Style.color}}>\r\n        <img src={Data.img} \r\n            alt=\"\" width={Style.width} height={Style.height} />\r\n        {Data.Text}\r\n      </a>\r\n    </div>\r\n  </nav>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Web Project\\Mark 13\\webpageloader\\frontend\\src\\component\\Slider\\carousel.jsx",["98","99","100","101","102","103","104","105","106"],"import React,{useState,useEffect} from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nconst Carousel=styled.div`\r\n  height:${props=>`${props.Styles.height}vh` ||\"80vh\"};\r\n  img{\r\n    width:100%;\r\n    height:${props=>`${props.Styles.height}vh`||\"80vh\"};\r\n  }\r\n`\r\n\r\n\r\nconst Caption=styled.div`\r\n  padding-bottom:\"40%\";\r\n  h2{\r\n    font-size:${props=>`${props.Styles.fontsize}px` ||'100px'};\r\n    color:${props=>props.Styles.color ||\"black\"};\r\n  }\r\n  p{\r\n    font-size:${props=>`${props.Styles.fontsize/2}px` ||'50px'};\r\n    color:${props=>props.Styles.color ||\"black\"};\r\n  }\r\n\r\n`\r\n\r\n\r\n\r\nconst CarouselSlide = ({styles,data,controls}) => {\r\n\r\n  const Style=styles==undefined?{height:\"100vh\"}:styles[0];\r\n  \r\n  const Data= data == undefined\r\n      ? [\r\n          {\r\n            img:\"https://images.unsplash.com/photo-1609953398453-c3fc0a7be8e1?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1051&q=80\",\r\n            title:\"Hello world\",\r\n            subtitle:\"subtitle\"\r\n          },\r\n        ]\r\n      : data\r\n\r\n  const [control, setcontrol] = useState(controls==undefined?{indicator:1,arrow:0}:controls)\r\n  \r\n  return (\r\n      <Carousel\r\n        Styles={Style}\r\n        id=\"carouselslider\"\r\n        className=\"carousel carousel-dark slide\"\r\n        data-bs-ride=\"carousel\"\r\n      >\r\n        {control.indicator==1?<ol className=\"carousel-indicators\">\r\n\r\n        {\r\n          Data.map((datas,index)=>\r\n            <li\r\n              data-bs-target=\"#carouselslider\"\r\n              data-bs-slide-to={`${index}`}\r\n              className={`${index===0?\"active\":\"\"}`}\r\n              key={index}\r\n            ></li>\r\n          )\r\n        }\r\n      \r\n        </ol>:<></>}\r\n        \r\n        <div className=\"carousel-inner\">\r\n\r\n          {Data.map((datas,index)=>\r\n          \r\n\r\n          <div className={`${index==0?\"carousel-item active\":\"carousel-item\"}`} key={index}>\r\n            <img\r\n              src={datas.img}\r\n            />\r\n            <Caption className=\"carousel-caption\" Styles={Style}>\r\n              <h2>{datas.title}</h2>\r\n              <p>{datas.subtitle}</p>\r\n            </Caption>\r\n          </div>\r\n          )}\r\n\r\n          \r\n          \r\n        \r\n        </div>\r\n        {\r\n          control.arrow==1?<>\r\n        <a\r\n          className=\"carousel-control-prev\"\r\n          href=\"#carouselslider\"\r\n          role=\"button\"\r\n          data-bs-slide=\"prev\"\r\n        >\r\n          <span\r\n            className=\"carousel-control-prev-icon\"\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n          <span className=\"visually-hidden\">Previous</span>\r\n        </a>\r\n        <a\r\n          className=\"carousel-control-next\"\r\n          href=\"#carouselslider\"\r\n          role=\"button\"\r\n          data-bs-slide=\"next\"\r\n        >\r\n          <span\r\n            className=\"carousel-control-next-icon\"\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n          <span className=\"visually-hidden\">Next</span>\r\n        </a>\r\n        </>\r\n        :<></>}\r\n      </Carousel>\r\n    \r\n  );\r\n};\r\n\r\nexport default CarouselSlide;\r\n","C:\\Web Project\\Mark 13\\webpageloader\\frontend\\src\\component\\Text\\TextManger.jsx",["107","108","109"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst H=styled.h1`\r\n\r\n    color:${props=>props.Styles.color || \"black\"};\r\n    background-color:${props=>props.Styles.backgroundcolor||\"white\"};\r\n    text-align:${props=>props.Styles.textalign||\"left\"};\r\n    font-size:${props=>props.Styles.fontsize||\"\"}px;\r\n    ${props=>props.Styles.padding?`padding:${props.Styles.padding.top}% ${props.Styles.padding.right}% ${props.Styles.padding.bottom}% ${props.Styles.padding.left}% `\r\n    :\"padding:0px 0px 0px 0px\"};\r\n    ${props=>props.Styles.margin?`margin:${props.Styles.margin.top}% ${props.Styles.margin.right}% ${props.Styles.margin.bottom}% ${props.Styles.margin.left}% `\r\n    :\"margin:0px 0px 0px 0px\"};\r\n    ${props=>props.Styles.customstyle}\r\n`\r\n\r\n\r\nfunction Htag({styles,data}){\r\n\r\n    const Style=styles[0]==undefined?{}:styles[0]\r\n    const Data=data[0]==undefined?{}:data[0];\r\n\r\n    return (\r\n        <H Styles={Style}>{Data.text}</H>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Htag;","C:\\Web Project\\Mark 13\\webpageloader\\frontend\\src\\Algorithm\\AllComponent.js",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":12,"column":3,"nodeType":"116","messageId":"117","endLine":12,"endColumn":14},{"ruleId":"114","severity":1,"message":"118","line":13,"column":3,"nodeType":"116","messageId":"117","endLine":13,"endColumn":13},{"ruleId":"114","severity":1,"message":"119","line":16,"column":8,"nodeType":"116","messageId":"117","endLine":16,"endColumn":11},{"ruleId":"114","severity":1,"message":"120","line":2,"column":8,"nodeType":"116","messageId":"117","endLine":2,"endColumn":15},{"ruleId":"114","severity":1,"message":"121","line":6,"column":8,"nodeType":"116","messageId":"117","endLine":6,"endColumn":23},{"ruleId":"122","severity":1,"message":"123","line":97,"column":30,"nodeType":"124","messageId":"125","endLine":97,"endColumn":32},{"ruleId":"126","severity":1,"message":"127","line":111,"column":5,"nodeType":"128","endLine":111,"endColumn":7,"suggestions":"129"},{"ruleId":"122","severity":1,"message":"123","line":123,"column":18,"nodeType":"124","messageId":"125","endLine":123,"endColumn":20},{"ruleId":"114","severity":1,"message":"130","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":26},{"ruleId":"131","severity":1,"message":"132","line":32,"column":13,"nodeType":"133","messageId":"134","endLine":32,"endColumn":15},{"ruleId":"114","severity":1,"message":"121","line":3,"column":8,"nodeType":"116","messageId":"117","endLine":3,"endColumn":23},{"ruleId":"122","severity":1,"message":"123","line":30,"column":30,"nodeType":"124","messageId":"125","endLine":30,"endColumn":32},{"ruleId":"126","severity":1,"message":"135","line":43,"column":6,"nodeType":"128","endLine":43,"endColumn":8,"suggestions":"136"},{"ruleId":"114","severity":1,"message":"121","line":3,"column":8,"nodeType":"116","messageId":"117","endLine":3,"endColumn":23},{"ruleId":"114","severity":1,"message":"137","line":4,"column":8,"nodeType":"116","messageId":"117","endLine":4,"endColumn":21},{"ruleId":"114","severity":1,"message":"138","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":14},{"ruleId":"131","severity":1,"message":"139","line":10,"column":41,"nodeType":"133","messageId":"134","endLine":10,"endColumn":43},{"ruleId":"114","severity":1,"message":"140","line":11,"column":10,"nodeType":"116","messageId":"117","endLine":11,"endColumn":15},{"ruleId":"114","severity":1,"message":"141","line":11,"column":17,"nodeType":"116","messageId":"117","endLine":11,"endColumn":25},{"ruleId":"114","severity":1,"message":"142","line":12,"column":10,"nodeType":"116","messageId":"117","endLine":12,"endColumn":15},{"ruleId":"114","severity":1,"message":"143","line":12,"column":17,"nodeType":"116","messageId":"117","endLine":12,"endColumn":25},{"ruleId":"131","severity":1,"message":"132","line":17,"column":10,"nodeType":"133","messageId":"134","endLine":17,"endColumn":12},{"ruleId":"131","severity":1,"message":"132","line":17,"column":27,"nodeType":"133","messageId":"134","endLine":17,"endColumn":29},{"ruleId":"131","severity":1,"message":"139","line":241,"column":40,"nodeType":"133","messageId":"134","endLine":241,"endColumn":42},{"ruleId":"131","severity":1,"message":"139","line":262,"column":12,"nodeType":"133","messageId":"134","endLine":262,"endColumn":14},{"ruleId":"131","severity":1,"message":"132","line":264,"column":54,"nodeType":"133","messageId":"134","endLine":264,"endColumn":56},{"ruleId":"126","severity":1,"message":"144","line":268,"column":6,"nodeType":"128","endLine":268,"endColumn":10,"suggestions":"145"},{"ruleId":"131","severity":1,"message":"139","line":308,"column":20,"nodeType":"133","messageId":"134","endLine":308,"endColumn":22},{"ruleId":"131","severity":1,"message":"139","line":312,"column":31,"nodeType":"133","messageId":"134","endLine":312,"endColumn":33},{"ruleId":"114","severity":1,"message":"146","line":1,"column":15,"nodeType":"116","messageId":"117","endLine":1,"endColumn":23},{"ruleId":"131","severity":1,"message":"132","line":18,"column":23,"nodeType":"133","messageId":"134","endLine":18,"endColumn":25},{"ruleId":"131","severity":1,"message":"132","line":19,"column":21,"nodeType":"133","messageId":"134","endLine":19,"endColumn":23},{"ruleId":"147","severity":1,"message":"148","line":34,"column":7,"nodeType":"149","endLine":34,"endColumn":72},{"ruleId":"114","severity":1,"message":"130","line":1,"column":24,"nodeType":"116","messageId":"117","endLine":1,"endColumn":33},{"ruleId":"131","severity":1,"message":"132","line":30,"column":21,"nodeType":"133","messageId":"134","endLine":30,"endColumn":23},{"ruleId":"131","severity":1,"message":"132","line":32,"column":20,"nodeType":"133","messageId":"134","endLine":32,"endColumn":22},{"ruleId":"114","severity":1,"message":"150","line":42,"column":19,"nodeType":"116","messageId":"117","endLine":42,"endColumn":29},{"ruleId":"131","severity":1,"message":"132","line":42,"column":50,"nodeType":"133","messageId":"134","endLine":42,"endColumn":52},{"ruleId":"131","severity":1,"message":"132","line":51,"column":27,"nodeType":"133","messageId":"134","endLine":51,"endColumn":29},{"ruleId":"131","severity":1,"message":"132","line":71,"column":35,"nodeType":"133","messageId":"134","endLine":71,"endColumn":37},{"ruleId":"151","severity":1,"message":"152","line":72,"column":13,"nodeType":"149","endLine":74,"endColumn":15},{"ruleId":"131","severity":1,"message":"132","line":87,"column":24,"nodeType":"133","messageId":"134","endLine":87,"endColumn":26},{"ruleId":"114","severity":1,"message":"146","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"132","line":21,"column":26,"nodeType":"133","messageId":"134","endLine":21,"endColumn":28},{"ruleId":"131","severity":1,"message":"132","line":22,"column":23,"nodeType":"133","messageId":"134","endLine":22,"endColumn":25},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","'jwt' is defined but never used.","'LoadAll' is defined but never used.","'ReactHtmlParser' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Data.length' and 'loadfinish'. Either include them or remove the dependency array.","ArrayExpression",["155"],"'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'props.match.params.name'. Either include it or remove the dependency array.",["156"],"'CarouselSlide' is defined but never used.","'Navbar' is defined but never used.","Expected '!==' and instead saw '!='.","'State' is assigned a value but never used.","'setState' is assigned a value but never used.","'Value' is assigned a value but never used.","'setValue' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'demodata'. Either include it or remove the dependency array. If 'setStyle' needs the current value of 'demodata', you can also switch to useReducer instead of useState and read 'demodata' in the reducer.",["157"],"'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setcontrol' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [Data.length, loadfinish]",{"range":"164","text":"165"},"Update the dependencies array to be: [props.match.params.name]",{"range":"166","text":"167"},"Update the dependencies array to be: [Id, demodata]",{"range":"168","text":"169"},[2604,2606],"[Data.length, loadfinish]",[1034,1036],"[props.match.params.name]",[7240,7244],"[Id, demodata]"]